{"version":3,"sources":["styles/global.ts","config/auth.ts","services/api.ts","services/UsersService.ts","services/SessionsService.ts","pages/Login/styles.ts","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/Login/index.tsx","pages/Signup/styles.ts","pages/Signup/index.tsx","components/Navbar/styles.ts","components/Navbar/index.tsx","pages/Dragons/DragonsList/styles.ts","pages/Dragons/DragonsList/index.tsx","pages/Dragons/DragonsCreate/styles.ts","pages/Dragons/DragonsCreate/index.tsx","pages/Dragons/DragonsUpdate/styles.ts","pages/Dragons/DragonsUpdate/index.tsx","routes/index.tsx","App.tsx","index.tsx","assets/dragongrey.png"],"names":["createGlobalStyle","Container","styled","div","secret","expiresIn","api","axios","create","baseURL","usersService","get","storagedUsers","localStorage","getItem","JSON","parse","user","users","find","usr","email","toast","dark","push","setItem","stringify","sessionsService","password","a","compare","authConfig","token","sign","subject","id","delete","removeItem","hasActiveSession","getUserData","userSessionStoraged","interceptors","request","use","config","url","endsWith","window","location","assign","process","Content","dragonBackground","LoginBox","shade","props","isFocused","css","isFilled","Input","name","label","Icon","icon","rest","inputRef","useRef","useState","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","error","useEffect","path","ref","current","handleInputBlur","useCallback","value","handleInputFocus","size","onFocus","onBlur","button","Button","children","type","Login","hisory","useHistory","formRef","onSubmit","then","response","FiMail","placeholder","required","FiLock","to","SignupBox","Signup","handleSubmit","data","hash","encryptedPassword","uuid","reset","success","onClose","handleValidatePassword","formData","getData","confirmPassword","getFieldRef","setCustomValidity","autoComplete","FiUser","onChange","Nav","nav","Navbar","history","greet","setGreet","split","firstName","title","onClick","TableHead","table","TableBody","Header","DragonsList","dragons","setDragons","map","dragon","key","Date","createdAt","toLocaleDateString","Swal","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","newDragonList","filter","handleDeleteDragon","ContentForm","ButtonSave","DragonsCreate","goBack","post","undefined","DragonsUpdate","match","setDragon","params","setData","put","Routes","exact","render","component","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.75be67b2.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    /* margin: 0 auto;\n    padding: 40px 20px; */\n    /* display: flex;\n    align-items: center;\n    justify-content: center; */\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport const Container = styled.div`\n  height: calc(100vh - 225px);\n  width: calc(100vw - 100px);\n  border-radius: 20px;\n  background: #282a36;\n  color: #e3dfdb;\n  -webkit-box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  -moz-box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  display: block;\n  margin: 20px auto;\n  overflow: hidden;\n`;\n","export default {\n  jwt: {\n    secret: 'e778a62bc936cdfacc33a010d2cd1c26',\n    expiresIn: '1d',\n  },\n};\n","import axios, { AxiosRequestConfig } from 'axios';\n\nimport UsersService from './UsersService';\nimport SessionsService from './SessionsService';\n\nconst api = axios.create({\n  baseURL: 'http://5c4b2a47aa8ee500142b4887.mockapi.io/api/v1/',\n});\n\nexport const usersService = new UsersService();\nexport const sessionsService = new SessionsService();\n\napi.interceptors.request.use((config) => {\n  if (!config.url?.endsWith('login') || !config.url?.endsWith('signup')) {\n    if (!sessionsService.hasActiveSession()) {\n      window.location.assign(`${process.env.PUBLIC_URL}/login`);\n    }\n  }\n\n  return config;\n});\n\nexport default api;\n","import User from '../interfaces/user';\nimport { toast } from 'react-toastify';\n\nexport default class UsersService {\n  get = () => {\n    const storagedUsers = localStorage.getItem('@dragonsSpa:users');\n    return storagedUsers ? JSON.parse(storagedUsers) : [];\n  };\n\n  create = (user: User) => {\n    const users = this.get();\n\n    const userWithEmail = users.find((usr: User) => usr.email === user.email);\n\n    if (userWithEmail) {\n      toast.dark('Já existe um usuário cadastrado com este email.');\n      return;\n    }\n\n    users.push(user);\n\n    localStorage.setItem('@dragonsSpa:users', JSON.stringify(users));\n  };\n}\n","import { sign } from 'jsonwebtoken';\nimport { compare } from 'bcryptjs';\n\nimport { usersService } from './api';\nimport authConfig from '../config/auth';\nimport User from '../interfaces/user';\n\nexport default class SessionsService {\n  create = async (email: string, password: string) => {\n    const users = usersService.get();\n\n    const user = users.find((user: User) => user.email);\n\n    if (!user) {\n      return;\n    }\n\n    if (!(await compare(password, user.password))) {\n      return;\n    }\n\n    const { secret, expiresIn } = authConfig.jwt;\n\n    const token = sign({}, secret, {\n      subject: user.id,\n      expiresIn,\n    });\n\n    localStorage.setItem(\n      '@dragonsSpa:userSession',\n      JSON.stringify({ user, token }),\n    );\n\n    return true;\n  };\n\n  delete = () => {\n    localStorage.removeItem('@dragonsSpa:userSession');\n  };\n\n  hasActiveSession = () => {\n    return localStorage.getItem('@dragonsSpa:userSession');\n  };\n\n  getUserData = (): User => {\n    const userSessionStoraged = localStorage.getItem('@dragonsSpa:userSession');\n    const userSession = userSessionStoraged\n      ? JSON.parse(userSessionStoraged)\n      : null;\n\n    return userSession.user as User;\n  };\n}\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\nimport dragonBackground from '../../assets/dragongrey.png';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Content = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: #ffffff url(${dragonBackground}) no-repeat 5% bottom;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LoginBox = styled.div`\n  height: auto;\n  width: 550px;\n  border-radius: 20px;\n  background: #282a36;\n  color: #e3dfdb;\n  padding: 20px;\n  -webkit-box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  -moz-box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  text-align: center;\n\n  h1 {\n    text-align: center;\n    margin-bottom: 20px;\n  }\n\n  > a {\n    color: #e3dfdb;\n    margin-top: 24px;\n    -webkit-text-decoration: none;\n    text-decoration: none;\n    -webkit-transition: color 0.2s;\n    transition: color 0.2s;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#e3dfdb')};\n    }\n  }\n\n  form {\n    div {\n      margin-bottom: 10px;\n      width: 100%;\n    }\n  }\n`;\n","import styled, { css } from 'styled-components';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #282a36;\n  border-radius: 10px;\n  border: 2px solid #666360;\n  padding: 16px;\n  width: 100%;\n  color: #666360;\n  transition: border 0.2s;\n  transition: color 0.2s;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      color: #e3dfdb;\n      border-color: #e3dfdb;\n    `}\n\n  ${(props) =>\n    props.isFilled &&\n    css`\n      color: #e3dfdb;\n    `}\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n    height: 40px;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 49%;\n\n  label {\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n\n  @media (max-width: 1200px) {\n    width: 100%;\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\n\nimport { Container, Content } from './styles';\n\ninterface Props {\n  name: string;\n  label?: string | null;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst Input: React.FC<InputProps> = ({ name, label, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, registerField, error } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      path: 'value',\n      ref: inputRef.current,\n    });\n  }, [fieldName, registerField]);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  return (\n    <Content>\n      {label && <label>{label}</label>}\n      <Container isFilled={isFilled} isFocused={isFocused}>\n        {Icon && <Icon size={20} />}\n        <input\n          id={fieldName}\n          onFocus={handleInputFocus}\n          onBlur={handleInputBlur}\n          defaultValue={defaultValue}\n          ref={inputRef}\n          {...rest}\n        />\n        {error && <span>{error}</span>}\n      </Container>\n    </Content>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.button`\n  background: #7666c9;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: 312e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#7666C9')};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","import React, { useRef, useEffect } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { toast } from 'react-toastify';\n\nimport { sessionsService } from '../../services/api';\nimport { Content, LoginBox } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\ninterface LoginForm {\n  email: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const hisory = useHistory();\n  const formRef = useRef<FormHandles>(null);\n\n  useEffect(() => {\n    if (sessionsService.hasActiveSession()) {\n      hisory.push(`${process.env.PUBLIC_URL}/dragons`);\n    }\n  }, []);\n\n  const handleSubmit: SubmitHandler<LoginForm> = ({ email, password }) => {\n    sessionsService.create(email, password).then((response) => {\n      if (!response) {\n        toast.dark('Email e/ou senha incorretos.');\n        return;\n      }\n\n      hisory.push(`${process.env.PUBLIC_URL}/dragons`);\n    });\n  };\n  return (\n    <Content>\n      <LoginBox>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu login</h1>\n          <Input\n            name=\"email\"\n            icon={FiMail}\n            type=\"email\"\n            placeholder=\"E-mail\"\n            required\n          />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n            required\n          />\n\n          <Button type=\"submit\">Entrar</Button>\n        </Form>\n\n        <Link to={`${process.env.PUBLIC_URL}/signup`}>\n          <FiLogIn />\n          Criar conta\n        </Link>\n      </LoginBox>\n    </Content>\n  );\n};\n\nexport default Login;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\nimport dragonBackground from '../../assets/dragongrey.png';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Content = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: #ffffff url(${dragonBackground}) no-repeat 5% bottom;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SignupBox = styled.div`\n  height: auto;\n  width: 550px;\n  border-radius: 20px;\n  background: #282a36;\n  color: #e3dfdb;\n  padding: 20px;\n  -webkit-box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  -moz-box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  box-shadow: 0px 0px 42px 0px rgba(133, 133, 133, 1);\n  text-align: center;\n\n  h1 {\n    text-align: center;\n    margin-bottom: 20px;\n  }\n\n  form {\n    div {\n      margin-bottom: 10px;\n      width: 100%;\n    }\n  }\n`;\n","import React, { useRef } from 'react';\nimport { FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { useHistory } from 'react-router';\n\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { hash } from 'bcryptjs';\nimport { toast } from 'react-toastify';\nimport { uuid } from 'uuidv4';\n\nimport { usersService } from '../../services/api';\nimport { Content, SignupBox } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\ninterface SignupForm {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst Signup: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const hisory = useHistory();\n\n  const handleSubmit: SubmitHandler<SignupForm> = async (data) => {\n    const { name, email, password } = data;\n    const encryptedPassword = await hash(password, 8);\n    const user = {\n      id: uuid(),\n      name,\n      email,\n      password: encryptedPassword,\n    };\n\n    usersService.create(user);\n\n    formRef.current?.reset();\n\n    toast.success('Você foi cadastrado com sucesso!', {\n      onClose: () => hisory.push(`${process.env.PUBLIC_URL}/login`),\n    });\n  };\n\n  const handleValidatePassword = () => {\n    const formData = formRef.current?.getData() as SignupForm;\n\n    if (formData?.password !== formData?.confirmPassword) {\n      formRef.current\n        ?.getFieldRef('confirmPassword')\n        .setCustomValidity('Confirme a senha corretamente');\n    } else {\n      formRef.current?.getFieldRef('confirmPassword').setCustomValidity('');\n    }\n  };\n\n  return (\n    <Content>\n      <SignupBox>\n        <Form ref={formRef} onSubmit={handleSubmit} autoComplete=\"off\">\n          <h1>Cadastre-se</h1>\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" required />\n          <Input\n            name=\"email\"\n            icon={FiMail}\n            type=\"email\"\n            placeholder=\"E-mail\"\n            required\n          />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={handleValidatePassword}\n            required\n          />\n          <Input\n            name=\"confirmPassword\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirmar senha\"\n            onChange={handleValidatePassword}\n            required\n          />\n          <Button type=\"submit\">Salvar</Button>\n        </Form>\n      </SignupBox>\n    </Content>\n  );\n};\n\nexport default Signup;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Nav = styled.nav`\n  background: #e1e1e5;\n  width: calc(100vw - 100px);\n  border-radius: 20px;\n  color: #282a36;\n  margin: 20px auto 0 auto;\n  overflow: hidden;\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 19px;\n\n  svg {\n    cursor: pointer;\n    transition: color 0.2s;\n  }\n\n  svg:hover {\n    color: ${shade(0.2, '#282a368f')};\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FiLogOut } from 'react-icons/fi';\n\nimport { sessionsService } from '../../services/api';\n\nimport { Nav } from './styles';\n\nconst Navbar: React.FC = () => {\n  const history = useHistory();\n  const [greet, setGreet] = useState<string>('');\n\n  useEffect(() => {\n    const { name } = sessionsService.getUserData();\n    const [firstName] = name.split(' ');\n\n    setGreet(`Olá ${firstName}, seja bem vindo (a)!`);\n  }, []);\n\n  const handleLogout = () => {\n    sessionsService.delete();\n    history.push(`${process.env.PUBLIC_URL}/login`);\n  };\n\n  return (\n    <Nav>\n      <span>{greet}</span>\n\n      <FiLogOut title=\"Sair\" onClick={handleLogout} />\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const TableHead = styled.table`\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n\n  thead {\n    text-transform: uppercase;\n    color: #00ad5f;\n    background: #1f212c;\n\n    th {\n      padding: 25px 20px;\n    }\n\n    th:nth-child(1) {\n      width: 20%;\n      padding-left: 40px;\n    }\n    th:nth-child(2) {\n      width: 30%;\n    }\n    th:nth-child(3) {\n      width: 40%;\n    }\n  }\n`;\n\nexport const TableBody = styled.div`\n  overflow: auto;\n  max-height: calc(100vh - 290px);\n\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #4e4e4e;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #00ad5f;\n  }\n\n  table {\n    width: 100%;\n    text-align: left;\n    border-collapse: collapse;\n    font-size: 18px;\n\n    tbody {\n      td {\n        padding: 20px;\n      }\n\n      td:nth-child(1) {\n        width: 20%;\n        padding-left: 40px;\n      }\n      td:nth-child(2) {\n        width: 30%;\n      }\n      td:nth-child(3) {\n        width: 30%;\n      }\n      td:nth-child(4) {\n        text-align: center;\n        width: 20%;\n\n        svg {\n          cursor: pointer;\n          margin-left: 15px;\n        }\n\n        svg:nth-child(2) {\n          color: #f0612c;\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  width: calc(100vw - 100px);\n  color: #7666c9;\n  margin: 30px auto 0 auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    width: 52px;\n    border-radius: 50%;\n    color: #ffffff;\n    background: #00ad5f;\n\n    :hover {\n      background: ${shade(0.2, '#00ad5f')};\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FiPlus, FiEdit, FiTrash } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nimport Swal from 'sweetalert2';\n\nimport api from '../../../services/api';\nimport { Container } from '../../../styles/global';\nimport Navbar from '../../../components/Navbar';\nimport Button from '../../../components/Button';\nimport { TableHead, TableBody, Header } from './styles';\n\ninterface Dragon {\n  id: string;\n  createdAt: string;\n  name: string;\n  type: string;\n}\n\nconst DragonsList: React.FC = () => {\n  const history = useHistory();\n  const [dragons, setDragons] = useState<Dragon[]>([]);\n\n  useEffect(() => {\n    api.get<Dragon[]>('dragon').then((response) => {\n      setDragons(response.data);\n    });\n  }, []);\n\n  const handleCreateDragon = () => {\n    history.push(`${process.env.PUBLIC_URL}/dragons/create`);\n  };\n\n  const handleUpdateDragon = (id: string) => {\n    history.push(`${process.env.PUBLIC_URL}/dragons/${id}`);\n  };\n\n  const handleDeleteDragon = ({ id, name }: Dragon) => {\n    Swal.fire({\n      title: 'Você tem certeza?',\n      text: `O dragão ${name} será removido e pode nunca mais retornar! 🐲😟`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      cancelButtonColor: '#3085d6',\n      confirmButtonText: 'Remover',\n      cancelButtonText: 'Cancelar',\n    }).then((result) => {\n      if (result.value) {\n        api.delete(`dragon/${id}`).then(() => {\n          toast.dark(`${name} foi removido. 🐉`);\n          const newDragonList = dragons.filter((dragon) => dragon.id !== id);\n          setDragons(newDragonList);\n        });\n      }\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Header>\n        <h1>Lista de Dragões</h1>\n        <Button title=\"Novo Dragão\" onClick={handleCreateDragon}>\n          <FiPlus />\n        </Button>\n      </Header>\n      <Container>\n        <TableHead>\n          <thead>\n            <tr>\n              <th>Data de criação</th>\n              <th>Nome</th>\n              <th>Tipo</th>\n              <th></th>\n            </tr>\n          </thead>\n        </TableHead>\n        <TableBody>\n          <table>\n            <tbody>\n              {dragons.map((dragon) => (\n                <tr key={dragon.id}>\n                  <td>{new Date(dragon.createdAt).toLocaleDateString()}</td>\n                  <td>{dragon.name}</td>\n                  <td>{dragon.type}</td>\n                  <td>\n                    <FiEdit onClick={() => handleUpdateDragon(dragon.id)} />\n                    <FiTrash onClick={() => handleDeleteDragon(dragon)} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </TableBody>\n      </Container>\n    </>\n  );\n};\n\nexport default DragonsList;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Header = styled.div`\n  width: calc(100vw - 100px);\n  color: #7666c9;\n  margin: 30px auto 0 auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    width: 52px;\n    border-radius: 50%;\n    background: #282a36;\n    color: #e3dfdb;\n\n    :hover {\n      background: ${shade(0.2, '#282a36')};\n    }\n  }\n`;\n\nexport const ContentForm = styled.div`\n  padding: 2%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: 1200px) {\n    flex-direction: column;\n\n    div {\n      margin-bottom: 10px;\n    }\n  }\n`;\n\nexport const ButtonSave = styled.button`\n  background: #00ad5f;\n  height: 56px;\n  min-width: 150px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #e3dfdb;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n  float: right;\n  margin-right: 2%;\n\n  &:hover {\n    background: ${shade(0.2, '#00ad5f')};\n  }\n`;\n","import React, { useRef } from 'react';\nimport { FiCornerUpLeft } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../../services/api';\n\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { toast } from 'react-toastify';\n\nimport { Container } from '../../../styles/global';\nimport Navbar from '../../../components/Navbar';\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\n\nimport { Header, ContentForm, ButtonSave } from './styles';\n\ninterface DragonForm {\n  name: string;\n  type: string;\n  histories: string[];\n}\n\nconst DragonsCreate: React.FC = () => {\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n\n  const handleClickGoBack = () => {\n    history.goBack();\n  };\n\n  const handleSubmit: SubmitHandler<DragonForm> = (data) => {\n    if (!data.name || !data.type) {\n      return;\n    }\n\n    api.post('dragon', data).then(() => {\n      formRef.current?.reset();\n      toast.success('🐉 Dragão adicionado com sucesso!', {\n        onClose: () => history.push(`${process.env.PUBLIC_URL}/dragons`),\n      });\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Header>\n        <h1>Novo Dragão</h1>\n        <Button title=\"Voltar\" onClick={handleClickGoBack}>\n          <FiCornerUpLeft />\n        </Button>\n      </Header>\n      <Container>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <ContentForm>\n            <Input\n              name=\"name\"\n              label=\"Nome\"\n              icon={undefined}\n              placeholder=\"Nome\"\n              required\n            />\n            <Input\n              name=\"type\"\n              label=\"Tipo\"\n              icon={undefined}\n              placeholder=\"Tipo\"\n              required\n            />\n          </ContentForm>\n\n          <ButtonSave type=\"submit\">Salvar</ButtonSave>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default DragonsCreate;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Header = styled.div`\n  width: calc(100vw - 100px);\n  color: #7666c9;\n  margin: 30px auto 0 auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    width: 52px;\n    border-radius: 50%;\n    background: #282a36;\n    color: #e3dfdb;\n\n    :hover {\n      background: ${shade(0.2, '#282a36')};\n    }\n  }\n`;\n\nexport const ContentForm = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  div {\n    max-width: 99%;\n    margin: 0;\n  }\n`;\n\nexport const ButtonSave = styled.button`\n  background: #00ad5f;\n  height: 56px;\n  min-width: 150px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #e3dfdb;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n  float: right;\n  margin-right: 20px;\n\n  &:hover {\n    background: ${shade(0.2, '#00ad5f')};\n  }\n`;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { FiCornerUpLeft } from 'react-icons/fi';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport api from '../../../services/api';\n\nimport { SubmitHandler, FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { toast } from 'react-toastify';\n\nimport { Container } from '../../../styles/global';\nimport Navbar from '../../../components/Navbar';\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\n\nimport { Header, ContentForm, ButtonSave } from './styles';\n\ninterface Dragon {\n  id?: string;\n  name: string;\n  type: string;\n  histories: string[];\n}\n\ninterface RouterProps {\n  match: any;\n}\n\nconst DragonsUpdate: React.FC<RouterProps> = ({ match }) => {\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n  const [dragon, setDragon] = useState<Dragon>();\n\n  useEffect(() => {\n    const { id } = match.params;\n    api.get<Dragon>(`dragon/${id}`).then(({ data }) => {\n      setDragon(data);\n      formRef.current?.setData(data);\n    });\n  }, []);\n\n  const handleClickGoBack = () => {\n    history.goBack();\n  };\n\n  const handleSubmit: SubmitHandler<Dragon> = (data) => {\n    if (!data.name || !data.type) {\n      return;\n    }\n\n    data.id = dragon?.id;\n    api.put(`dragon/${data.id}`, data).then(() => {\n      formRef.current?.reset();\n      toast.success('🐉 Dragão editado com sucesso!', {\n        onClose: () => history.push(`${process.env.PUBLIC_URL}/dragons`),\n      });\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Header>\n        <h1>{dragon?.name}</h1>\n        <Button title=\"Voltar\" onClick={handleClickGoBack}>\n          <FiCornerUpLeft />\n        </Button>\n      </Header>\n      <Container>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <ContentForm>\n            <Input\n              name=\"name\"\n              label=\"Nome\"\n              icon={undefined}\n              placeholder=\"Nome\"\n              required\n            />\n            <Input\n              name=\"type\"\n              label=\"Tipo\"\n              icon={undefined}\n              placeholder=\"Tipo\"\n              required\n            />\n          </ContentForm>\n\n          <ButtonSave type=\"submit\">Salvar</ButtonSave>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default DragonsUpdate;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Login from '../pages/Login';\nimport Signup from '../pages/Signup';\nimport DragonsList from '../pages/Dragons/DragonsList';\nimport DragonsCreate from '../pages/Dragons/DragonsCreate';\nimport DragonsUpdate from '../pages/Dragons/DragonsUpdate';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route\n      exact\n      path={process.env.PUBLIC_URL + '/'}\n      render={() => <Redirect to={process.env.PUBLIC_URL + '/login'} />}\n    />\n    <Route path={process.env.PUBLIC_URL + '/login'} exact component={Login} />\n    <Route path={process.env.PUBLIC_URL + '/signup'} exact component={Signup} />\n    <Route\n      exact\n      path={process.env.PUBLIC_URL + '/dragons'}\n      component={DragonsList}\n    />\n    <Route\n      path={process.env.PUBLIC_URL + '/dragons/create'}\n      component={DragonsCreate}\n    />\n    <Route\n      path={process.env.PUBLIC_URL + '/dragons/:id'}\n      component={DragonsUpdate}\n    />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n      <GlobalStyle />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnHover\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/dragongrey.2cd18528.png\";"],"sourceRoot":""}